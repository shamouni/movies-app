{"version":3,"sources":["store/middlewares/post-middleware.js","store/types/post-types.js","store/reducers/blog-reducer.js","store/store.js","components/Header/Nav-Mobile.js","components/Header/Search.js","components/Header/index.js","components/Footer/index.js","components/Slider/Slider-skeleton.js","components/Slider/Slides.js","components/Slider/index.js","components/Pagination/index.js","components/Posts/Post-item.js","components/Posts/Posts-sidebar.js","components/Posts/Posts-skeleton.js","components/Posts/index.js","components/Home/index.js","store/actions/post-actions.js","components/SinglePost/Comments.js","components/SinglePost/Details.js","components/SinglePost/Download.js","components/SinglePost/Similars.js","components/SinglePost/Trailer.js","components/SinglePost/index.js","App.js","reportWebVitals.js","index.js"],"names":["Paginate","data","page","limit","count","start","Array","slice","postMiddleware","store","next","action","successType","failedType","isEndpointCall","endpoint","method","reduxData","type","delay","includes","Promise","resolve","setTimeout","DataMock","FetchMock","then","res","posts","sliders","comments","length","error","reject","TYPES","FETCH_POSTS","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILED","FETCH_SINGLE_POST","FETCH_SINGLE_POST_SUCCESS","FETCH_SINGLE_POST_FAILED","FETCH_COMMENTS","FETCH_COMMENTS_SUCCESS","FETCH_COMMENTS_FAILED","ADD_COMMENT","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILED","initState","fetching","postReducer","state","comment","id","post","find","i","push","createStore","applyMiddleware","thunk","Body1","document","getElementsByTagName","BC","classList","Cls","NavMobile","useEffect","addEventListener","hideNav","removeEventListener","toggleShow","toString","indexOf","add","remove","className","href","src","process","alt","onClick","aria-hidden","body","querySelector","Search","useState","filteredList","setFilteredList","flag","setFlag","hideList","itemClick","e","stopPropagation","onKeyUp","value","target","regular","RegExp","f","filter","title","match","onFocus","onMouseDown","name","autoComplete","placeholder","map","to","ROOT","CATEGORY","Header","Footer","SliderSkeleton","k","baseColor","highlightColor","height","Slides","items","getLink","rnd","Math","ceil","random","image","prototype","PropTypes","array","time","Handle","Slider","initialize","container","row","scrollLeft","scrollWidth","window","startSlider","clearTimeout","getElementById","slide","dir","loop","gap","rows","querySelectorAll","s1","slideWidth","offsetWidth","r","l","scrollEnd","isReverse","screen","availWidth","t","d2","list1","splice","list2","list3","Pagination","url","pagesCount","active","PostItem","genre","satisfied","actors","director","desc","year","country","imdb","width","join","bColor","hColor","PostsSidebar","loading","_i","circle","PostsSkeleton","Posts","props","mapDispatchToProps","Fetch_Posts","connect","isHome","useLocation","pathname","URLSearchParams","search","get","parseInt","usePage","Comments","addComment","list","setList","user","email","input","setInput","handleChange","voteClick","like","dislike","updated","lk","dk","getDate","onSubmit","preventDefault","onChange","today","Date","dd","String","padStart","mm","getMonth","getFullYear","func","isRequired","Details","setLike","setDislike","Download","Similars","Trailer","summary","poster","controls","preload","shape","number","string","Fetch_Single_Post","Add_Comment_And_Fetch","dispatch","add_comment","fetch_comments","useParams","scrollTo","c","App","path","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b2a72726.chunk.js","sourcesContent":["import DataMock from '../data-mock.json';\r\n\r\nconst FetchMock = (type) => {\r\n\r\n    const delay = type.includes('POSTS') ? 1500 : 0;\r\n\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => resolve(DataMock), delay);\r\n    })\r\n};\r\n\r\nconst Paginate = (data, page, limit, count) => {\r\n\r\n    const start = (page - 1) * limit;\r\n\r\n    if(data && data instanceof Array && start <= count) {\r\n        return data.slice(start, page * limit);\r\n    }\r\n    else {\r\n        return data;\r\n    }\r\n}\r\n\r\nconst postMiddleware = store => next => action => {\r\n    \r\n    const {\r\n        successType,\r\n        failedType,\r\n        isEndpointCall,\r\n        endpoint,\r\n        method,\r\n        reduxData = {},\r\n    } = action;\r\n\r\n    const {page, limit} = reduxData;\r\n    \r\n\r\n    next(action);\r\n\r\n    if(isEndpointCall) {\r\n\r\n        try {\r\n            return (\r\n                FetchMock(successType, method, endpoint)\r\n                .then(res => {\r\n                    const { posts, sliders, comments } = res;\r\n                    const count = posts.length;\r\n\r\n                    next({\r\n                        type: successType,\r\n                        sliders,\r\n                        posts: Paginate(posts, page, limit, count),\r\n                        comments,\r\n                        count,\r\n                        ...reduxData\r\n                    });\r\n\r\n                    return new Promise(resolve => resolve(res));\r\n                })\r\n\r\n                // fetch('https://jsonplaceholder.typicode.com/todos')\r\n                // .then(res => res.json())\r\n                // .then(payload => {\r\n                //     const { posts, sliders, comments } = DataMock;\r\n                //     const count = posts.length;\r\n\r\n                //     next({\r\n                //         type: successType,\r\n                //         sliders,\r\n                //         posts: Paginate(posts, page, limit, count),\r\n                //         comments,\r\n                //         count,\r\n                //         ...reduxData\r\n                //     });\r\n\r\n                //     return new Promise(resolve => resolve(DataMock));\r\n                // })\r\n                // .catch(e => console.log(e))\r\n            );\r\n        } \r\n        catch (error) {\r\n\r\n            next({\r\n                type: failedType,\r\n                error\r\n            });\r\n\r\n            return new Promise((resolve, reject) => reject(error));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default postMiddleware;","const TYPES = {\r\n\r\n    FETCH_POSTS: 'FETCH_POSTS',\r\n    FETCH_POSTS_SUCCESS: 'FETCH_POSTS_SUCCESS',\r\n    FETCH_POSTS_FAILED: 'FETCH_POSTS_FAILED',\r\n    \r\n    FETCH_SINGLE_POST: 'FETCH_SINGLE_POST',\r\n    FETCH_SINGLE_POST_SUCCESS: 'FETCH_SINGLE_POST_SUCCESS',\r\n    FETCH_SINGLE_POST_FAILED: 'FETCH_SINGLE_POST_FAILED',\r\n\r\n    FETCH_COMMENTS: 'FETCH_COMMENTS',\r\n    FETCH_COMMENTS_SUCCESS: 'FETCH_COMMENTS_SUCCESS',\r\n    FETCH_COMMENTS_FAILED: 'FETCH_COMMENTS_FAILED',\r\n\r\n    ADD_COMMENT: 'ADD_COMMENT',\r\n    ADD_COMMENT_SUCCESS: 'ADD_COMMENT_SUCCESS',\r\n    ADD_COMMENT_FAILED: 'ADD_COMMENT_FAILED'\r\n}\r\n\r\nexport default TYPES;","import TYPES from '../types/post-types';\r\n\r\nconst initState = {\r\n    posts: [],\r\n    sliders: [], \r\n    comments: [],\r\n    fetching: false\r\n}\r\n\r\nconst postReducer = (state = initState, action) => {\r\n\r\n    const { type, posts, comments, comment, sliders, error, count, id } = action;\r\n\r\n    switch(type) {\r\n        // All Posts\r\n        case TYPES.FETCH_POSTS:\r\n            return {\r\n                ...state,\r\n                fetching: true\r\n            }\r\n        case TYPES.FETCH_POSTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                posts, \r\n                sliders, \r\n                count, \r\n                fetching: false,\r\n            }\r\n        case TYPES.FETCH_POSTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error,\r\n                fetching: false,\r\n            }\r\n        // Single Post\r\n        case TYPES.FETCH_SINGLE_POST:\r\n            return {\r\n                ...state,\r\n                fetching: true\r\n            }\r\n        case TYPES.FETCH_SINGLE_POST_SUCCESS:\r\n            const post = posts.find(i => i.id === +id);\r\n            return {\r\n                ...state,\r\n                post,\r\n                comments,\r\n                fetching: false\r\n            }\r\n        case TYPES.FETCH_SINGLE_POST_FAILED:\r\n            return {\r\n                ...state, \r\n                error,\r\n                fetching: false\r\n            }\r\n        // Add Comment\r\n        case TYPES.ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                fetching: true\r\n            }\r\n        case TYPES.ADD_COMMENT_SUCCESS:\r\n\r\n            // Just simulate api mutation\r\n            comments.push(comment);\r\n\r\n            return {\r\n                ...state,\r\n                fetching: false\r\n            }\r\n        case TYPES.ADD_COMMENT_FAILED:\r\n            return {\r\n                ...state, \r\n                error,\r\n                fetching: false\r\n            }\r\n            case TYPES.FETCH_COMMENTS_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    comments, \r\n                    fetching: false\r\n                }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport postMiddleware from './middlewares/post-middleware';\r\nimport postReducer from './reducers/blog-reducer';\r\n\r\nconst store = createStore(postReducer, applyMiddleware(thunk, postMiddleware));\r\n\r\nexport default store;","import React, {useEffect} from 'react'\r\n\r\nconst ROOT = process.env.REACT_APP_ROOT;\r\nconst Body1 = document.getElementsByTagName('body')[0];\r\nconst BC = Body1.classList;\r\nconst Cls = 'show-nav';\r\n\r\n\r\nconst NavMobile = () => {\r\n\r\n    useEffect(() => {\r\n        Body1.addEventListener('mousedown', hideNav);\r\n\r\n        return () => {\r\n            Body1.removeEventListener('mousedown', hideNav);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const toggleShow = () => {\r\n\r\n        if(BC.toString().indexOf(Cls) === -1) {\r\n            BC.add(Cls);\r\n        }\r\n        else {\r\n            BC.remove(Cls);\r\n        }\r\n    }\r\n\r\n    const hideNav = () => {\r\n        if(BC.toString().indexOf(Cls) !== -1) {\r\n            toggleShow();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div id=\"nav-mobile\">\r\n            <a className=\"logo\" href=\"#!\">\r\n                <img src={`${ROOT}/assets/images/logo.png`} alt=\"mobile logo\" />\r\n            </a>\r\n            <ul>\r\n                <li><a href=\"#!\">Home</a></li>\r\n                <li><a href=\"#!\">Movies</a></li>\r\n                <li><a href=\"#!\">Contact</a></li>\r\n                <li><a href=\"#!\">About</a></li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div className=\"col col-nav col-auto\">\r\n            <i onClick={toggleShow} className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n        </div>\r\n\r\n        <div className=\"cover\"></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavMobile\r\n","import {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport DataMock from '../../store/data-mock.json';\r\n\r\nconst ROOT = process.env.REACT_APP_ROOT;\r\nconst body = document.querySelector('body');\r\n\r\n\r\nconst Search = () => {\r\n\r\n    const [filteredList, setFilteredList] = useState([]);\r\n    const [flag, setFlag] = useState(false);\r\n\tconst inputClick = (e) => e.stopPropagation();\r\n\r\n    const hideList = () => setFlag(false);\r\n    const showList = () => setFlag(true);\r\n\r\n    useEffect(() => {\r\n        body.addEventListener('mousedown', hideList);\r\n\r\n        return () => {\r\n            body.removeEventListener('mousedown', hideList);\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    const lookup = e => {\r\n        const {posts} = DataMock;\r\n        const {value} = e.target;\r\n\r\n        const regular = new RegExp(value, 'i');\r\n        let f = posts.filter(i => i.title.match(regular));\r\n\r\n        setFilteredList(f);\r\n    }\r\n\r\n    const itemClick = e => {\r\n        e.stopPropagation();\r\n        setTimeout(hideList, 500);\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            <input \r\n                onKeyUp={lookup} \r\n                onFocus={showList} \r\n\t\t\t\tonMouseDown={inputClick} \r\n                type=\"text\" \r\n                name=\"search\" \r\n                autoComplete='off' \r\n                placeholder='Search movies name ...' \r\n            />\r\n\r\n            {(flag && filteredList.length > 0) && (\r\n                <div className=\"list\">\r\n                    {filteredList.map(i => (\r\n                        <Link onMouseDown={itemClick} to={ROOT + '/post/' + i.id} key={i.id} >\r\n                            {i.title}\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import {Link} from 'react-router-dom';\r\nimport NavMobile from './Nav-Mobile';\r\nimport Search from './Search';\r\n\r\nconst ROOT = process.env.REACT_APP_ROOT;\r\nconst CATEGORY = ROOT + \"/category\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col col-auto\">\r\n                        <Link to={ROOT}>\r\n                            <img src={`${ROOT}/assets/images/logo.png`} alt='logo' />\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div id=\"menu-main\" className=\"col\">\r\n                        <ul>\r\n                            <li><Link to={ROOT}>Home</Link></li>\r\n                            <li className='has-sub'>\r\n                                <Link to={CATEGORY}>\r\n                                    Movies\r\n                                    <i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\r\n                                </Link>\r\n                                \r\n                                <ul>\r\n                                    <li><Link to={CATEGORY}>Comedy</Link></li>\r\n                                    <li><Link to={CATEGORY}>Action</Link></li>\r\n                                    <li><Link to={CATEGORY}>Marvel</Link></li>\r\n                                    <li><Link to={CATEGORY}>Science Fiction</Link></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li><Link to={CATEGORY}>Archive</Link></li>\r\n                            <li><Link to={CATEGORY}>Action</Link></li>\r\n                            <li><Link to={ROOT}>About</Link></li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col col-3 col-search\">\r\n                        <Search />\r\n                    </div>\r\n\r\n                    <NavMobile />\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"container\">\r\n                <div className=\"row flex-start\">\r\n\r\n                    <div className=\"col col-9\">\r\n                        <div className=\"row bg\">\r\n                            <div className=\"col\">\r\n                                <div className=\"icon yellow\">\r\n                                    <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                                <a href='#!'>\r\n                                    Required\r\n                                    <h6>Format guide</h6>\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <div className=\"icon blue\">\r\n                                    <i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                                <a href='#!'>\r\n                                    Dubbed playback\r\n                                    <h6>Volume adjustment</h6>\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <div className=\"icon green\">\r\n                                    <i className=\"fa fa-film\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                                <a href='#!'>\r\n                                    Required\r\n                                    <h6>Formats guide</h6>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col col-3 col-right\">\r\n                        <div className=\"social-icon instagram\">\r\n                            <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n                            Instagram\r\n                        </div>\r\n                        <div className=\"social-icon telegram\">\r\n                            <i className=\"fa fa-telegram\" aria-hidden=\"true\"></i>\r\n                            Telegram\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"copyright\">\r\n                © 2021 All rights reserved\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\nconst SliderSkeleton = () => {\r\n    return (\r\n        <>\r\n        {[...Array(9)].map((i, k) => (\r\n            <div className=\"slide skeleton bg-skeleton\" key={k}>\r\n                <SkeletonTheme baseColor=\"#23232b\" highlightColor=\"#333\">\r\n                    <Skeleton count={4} height={2} />\r\n                </SkeletonTheme>\r\n            </div>\r\n        ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SliderSkeleton\r\n","import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport SliderSkeleton from './Slider-skeleton';\r\nconst ROOT = process.env.REACT_APP_ROOT;\r\n\r\nconst Slides = ({items = []}) => {\r\n\r\n    const getLink = id => {\r\n        const rnd = Math.ceil(Math.random() * 7) + 1;\r\n        const idMock = id > 8 ? rnd : id;\r\n        return ROOT + '/post/' + idMock;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {items && items.length > 0 ? (\r\n            items.map(i => (\r\n                <Link to={getLink(i.id)} key={i.id} className=\"slide\">\r\n                    <img src={`${ROOT}/assets/images/${i.image}`} alt='' />\r\n                </Link>\r\n            ))\r\n        ) : (\r\n            <SliderSkeleton />    \r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nSlides.prototype = {\r\n    items: PropTypes.array\r\n}\r\n\r\nexport default Slides;\r\n","import PropTypes from 'prop-types';\r\nimport {useEffect} from 'react';\r\nimport Slides from './Slides';\r\n\r\nconst time = 5000;\r\nlet Handle = null;\r\n\r\nconst Slider = ({data = []}) => {\r\n\r\n    useEffect(() => {\r\n        initialize();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    const initialize = () => {\r\n\r\n        const container = document.querySelector('.container');\r\n        const row = document.querySelector(\".row-s.reverse\");\r\n\r\n        row.scrollLeft = row.scrollWidth;\r\n        row.classList.add('slide-smooth');\r\n        \r\n        window.addEventListener('resize', startSlider);\r\n\r\n        window.addEventListener('blur', () => clearTimeout(Handle));\r\n        window.addEventListener('focus', startSlider);\r\n        \r\n        container.addEventListener('mouseenter', () => clearTimeout(Handle));\r\n        container.addEventListener('mouseleave', startSlider);\r\n\r\n        document.getElementById('prev-slide').addEventListener('click', () => slide('prev', false));\r\n        document.getElementById('next-slide').addEventListener('click', () => slide('next', false));\r\n    }\r\n    \r\n    \r\n    const slide = (dir = 'next', loop = true) => {\r\n\r\n        const gap = 2;\r\n        const rows = document.querySelectorAll(\".row-s\");\r\n        const s1 = document.querySelector('.slide');\r\n\r\n        if(!s1) {\r\n            return false;\r\n        }\r\n\r\n        const slideWidth = s1.offsetWidth;\r\n        \r\n        for(const r of rows) {\r\n            \r\n            const l = r.scrollLeft;\r\n            const scrollEnd = r.scrollWidth - r.offsetWidth;\r\n            const isReverse = r.classList.toString().indexOf('reverse') > -1;\r\n\r\n            if(dir === 'next') {\r\n\r\n                if(isReverse) {\r\n                    r.scrollLeft = (l - gap > 0) ? l - slideWidth : r.scrollWidth;\r\n                }\r\n                else {\r\n                    r.scrollLeft = (l + gap < scrollEnd) ? l + slideWidth : 0;\r\n                }\r\n            }\r\n            else {\r\n                if(isReverse) {\r\n                    r.scrollLeft = (l + gap < scrollEnd) ? l + slideWidth : 0;\r\n                }\r\n                else {\r\n                    r.scrollLeft = (l - gap > 0) ? l - slideWidth : r.scrollWidth;\r\n                }\r\n            }\r\n        }\r\n\r\n        clearTimeout(Handle);\r\n\r\n        if(loop) {\r\n            Handle = setTimeout(slide, time);\r\n        }\r\n    }\r\n\r\n    const startSlider = () => {\r\n\r\n        clearTimeout(Handle);\r\n\r\n        if(window.screen.availWidth > 1200) {\r\n            Handle = setTimeout(slide, time);\r\n        }\r\n    }\r\n\r\n    const t = Math.ceil(data.length / 3);\r\n    const d2 = [...data];\r\n\r\n    const list1 = d2.splice(0, t);\r\n    const list2 = d2.splice(0, t);\r\n    const list3 = d2.splice(0, t);\r\n\r\n    if(data.length > 0) {\r\n        startSlider();\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"slider\">\r\n            <div className=\"container\">\r\n\r\n                <div id=\"prev-slide\" className=\"arrow-slide\"></div>\r\n\r\n                <div className=\"row-s slide-smooth\">\r\n                    <Slides items={list1} />\r\n                </div>\r\n\r\n                <div className=\"row-s reverse slide-smooth2\">\r\n                    <Slides items={list2} />\r\n                </div>\r\n\r\n                <div className=\"row-s slide-smooth\">\r\n                    <Slides items={list3} />\r\n                </div>\r\n\r\n                <div id=\"next-slide\" className=\"arrow-slide\"></div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nSlider.prototype = {\r\n    data: PropTypes.array\r\n}\r\n\r\nexport default Slider\r\n","import PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Pagination = ({page = 1, limit = 1, count = 1}) => {\r\n\r\n    const url = '?page=';\r\n    const pagesCount = Math.ceil(count / limit);\r\n\r\n    return (\r\n        <div className='pagination'>\r\n            <ul>\r\n                {page > 1 && (\r\n                    <li>\r\n                        <Link to={url + (page - 1)} className=\"btn btn-blue\">Prev</Link>\r\n                    </li>\r\n                )}\r\n                \r\n                {count > 1 && (\r\n                    [...Array(pagesCount)].map((i, k) => {\r\n                        \r\n                        const active = k + 1 === page ? 'active' : 'normal';\r\n\r\n                        return (\r\n                            <li key={k}>\r\n                                <Link to={url + (k + 1)} className={`btn btn-blue ${active}`}>\r\n                                    {k + 1}\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                )}\r\n\r\n                {page * limit < count && (\r\n                    <li>\r\n                        <Link to={url + (page + 1)} className=\"btn btn-blue\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    page: PropTypes.number,\r\n    limit: PropTypes.number,\r\n    count: PropTypes.number\r\n}\r\n\r\nexport default Pagination\r\n","import PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nconst ROOT = process.env.REACT_APP_ROOT;\r\n\r\nconst PostItem = ({ post }) => {\r\n\r\n    const {\r\n      id,\r\n      title,\r\n      genre,\r\n      satisfied,\r\n      actors,\r\n      director,\r\n      desc,\r\n      year,\r\n      country,\r\n      imdb,\r\n    } = post;\r\n\r\n    const url = `${ROOT}/post/${id}`;\r\n\r\n    return (\r\n        <div className='post-item'>\r\n            <Link to={url} className=\"figure\">\r\n                <img src={`${ROOT}/assets/images/thumb${id}.jpg`} alt=\"\" width='207' height='290' />\r\n            </Link>\r\n            <div className=\"text\">\r\n                <h5 className='title'>\r\n                    <Link to={url}>{title}</Link>\r\n                </h5>\r\n                \r\n                <div className=\"meta\">\r\n                    <span>\r\n                        <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n                            {genre.join(', ')}\r\n                        </span>\r\n                    <span>\r\n                    <span>\r\n                        <i className=\"fa fa-heart\" aria-hidden=\"true\"></i>\r\n                            {satisfied}% satisfied\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"cast\">\r\n                    <div>Actors: {actors.join(', ')}</div>\r\n                    <div>Director: {director}</div>\r\n                </div>\r\n\r\n                <div className=\"desc\">\r\n                    {desc}...\r\n                </div>\r\n\r\n                <div className=\"info\">\r\n                    <div>\r\n                        <span>\r\n                            <i className=\"fa fa-calendar-o\" aria-hidden=\"true\"></i>\r\n                            Year: {year}\r\n                        </span>\r\n                        <span>\r\n                            <i className=\"fa fa-life-ring\" aria-hidden=\"true\"></i>\r\n                            Country: {country}\r\n                        </span>\r\n                        <span>\r\n                            <i className=\"fa fa-imdb\" aria-hidden=\"true\"></i>\r\n                            Imdb: {imdb}\r\n                        </span>\r\n                    </div>\r\n                    <Link to={url} className=\"btn btn-blue\">Watch Online</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        genre: PropTypes.array,\r\n        satisfied: PropTypes.number,\r\n        actors: PropTypes.array,\r\n        director: PropTypes.string,\r\n        desc: PropTypes.string,\r\n        year: PropTypes.string,\r\n        country: PropTypes.string,\r\n        imdb: PropTypes.number\r\n    })\r\n}\r\n\r\nexport default PostItem\r\n","import Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport { Link } from 'react-router-dom';\r\nconst ROOT = process.env.REACT_APP_ROOT;\r\n\r\nconst bColor = '#34343b';\r\nconst hColor = '#454545';\r\n\r\nconst PostsSidebar = ({ loading = true }) => {\r\n\r\n    return (\r\n        <>\r\n        {loading ? (\r\n            [...Array(14)].map((_i, k) => (\r\n                <div className=\" col col-12\" key={k}>\r\n                    <Link to={ROOT + '/post/' + (k < 8 ? k + 1 : k - 7)}>\r\n                        <img src={`${ROOT}/assets/images/s${k+1}.jpg`} alt=\"\" />\r\n                        <span className='date'>{Math.ceil(Math.random() * 22 + 2)}  days ago</span>\r\n                    </Link>\r\n                </div>\r\n            ))\r\n        ) : (\r\n            [...Array(7)].map((i, k) => (\r\n                <div className=\"col col-12 d-flex flex-center bg-skeleton py-4\" key={k}>\r\n                    <div className=\"col col-auto\">\r\n                        <SkeletonTheme baseColor={bColor} highlightColor={hColor}>\r\n                            <Skeleton count={1} width={52} height={52} circle={true} />\r\n                        </SkeletonTheme>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <SkeletonTheme baseColor={bColor} highlightColor={hColor}>\r\n                            <Skeleton count={4} height={3} />\r\n                        </SkeletonTheme>\r\n                    </div>\r\n                </div>\r\n            ))\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostsSidebar\r\n","import Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\nconst bColor = '#34343b';\r\nconst hColor = '#454545';\r\n\r\nconst PostsSkeleton = () => {\r\n\r\n    return (\r\n        <>\r\n        {[...Array(4)].map((i, k) => (\r\n            <div className='post-item flex-center' key={k}>\r\n                <div className=\"col col-auto figure\">\r\n                    <SkeletonTheme baseColor={bColor} highlightColor={hColor}>\r\n                        <Skeleton count={1} width={92} height={92} circle={true} />\r\n                    </SkeletonTheme>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"desc\">\r\n                        <SkeletonTheme baseColor={bColor} highlightColor={hColor}>\r\n                            <Skeleton count={8} height={4} />\r\n                        </SkeletonTheme>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostsSkeleton;","import PropTypes from 'prop-types';\r\nimport Pagination from '../Pagination'\r\nimport PostItem from './Post-item'\r\nimport PostsSidebar from './Posts-sidebar'\r\nimport PostsSkeleton from './Posts-skeleton'\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    const {\r\n        data = [], \r\n        fetching = true, \r\n        page = 1, \r\n        limit = 0, \r\n        count = 0\r\n    } = props;\r\n\r\n    const loading = data && data.length > 0;\r\n\r\n    return (\r\n        <section className='posts'>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    <div className='col-left col col-9'>\r\n                        {!fetching ? (\r\n                            data.map((i, k) => <PostItem post={i} key={k} />)\r\n                        ) : (\r\n                            <PostsSkeleton />\r\n                        )}\r\n\r\n                        <Pagination page={page} limit={limit} count={count} />\r\n                    </div>\r\n\r\n                    <div className=\"col-right col\">\r\n                        <h4 className='head'>\r\n                            <i className=\"fa fa-life-ring mr-1\" aria-hidden=\"true\"></i>\r\n                            Latest Posts\r\n                        </h4>\r\n                        <div className=\"row col-latest\">\r\n                            {<PostsSidebar loading={loading} />}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    data: PropTypes.array,\r\n    fetching: PropTypes.bool,\r\n    limit: PropTypes.number,\r\n    count: PropTypes.number,\r\n}\r\n\r\nexport default Posts\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Slider from \"../Slider\";\r\nimport Posts from \"../Posts\";\r\nimport { Fetch_Posts } from \"../../store/actions/post-actions\";\r\n\r\nconst usePage = () => {\r\n  // The URLSearchParams interface defines utility methods to work with the query string of a URL.\r\n  const page = new URLSearchParams(useLocation().search).get('page');\r\n  return page ? parseInt(page) : 1;\r\n}\r\n\r\nconst Home = (props) => {\r\n  \r\n  const {posts, sliders, count, fetching, Fetch_Posts} = props;\r\n  const isHome = useLocation().pathname !== '/category' ? true : false;\r\n  \r\n  const page = usePage();\r\n  const limit = 6;\r\n\r\n  useEffect(() => {\r\n    Fetch_Posts({ page, limit });\r\n    // eslint-disable-next-line\r\n  }, [page]);\r\n\r\n\r\n  return (\r\n    <>\r\n      {isHome && <Slider data={sliders} />}\r\n      <Posts \r\n        data={posts} \r\n        fetching={fetching} \r\n        page={page} \r\n        limit={limit} \r\n        count={count} \r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  sliders: state.sliders,\r\n  posts: state.posts,\r\n  count: state.count,\r\n  fetching: state.fetching\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  Fetch_Posts\r\n}\r\n\r\nHome.propTypes = {\r\n  sliders: PropTypes.array,\r\n  posts: PropTypes.array,\r\n  count: PropTypes.number,\r\n  fetching: PropTypes.bool\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import TYPES from '../types/post-types';\r\n\r\n\r\nexport const Fetch_Posts = ( f = { page: 1, limit: 6 } ) => ({\r\n    type: TYPES.FETCH_POSTS,\r\n    successType: TYPES.FETCH_POSTS_SUCCESS,\r\n    failedType: TYPES.FETCH_POSTS_FAILED,\r\n    isEndpointCall: true,\r\n    endpoint: `posts?_page=${f.page}&_limit=${f.limit}`,\r\n    reduxData: { page: f.page, limit: f.limit },\r\n    method: 'GET'\r\n});\r\n\r\n\r\nexport const Fetch_Single_Post = ( id ) => ({\r\n    type: TYPES.FETCH_SINGLE_POST, \r\n    successType: TYPES.FETCH_SINGLE_POST_SUCCESS, \r\n    failedType: TYPES.FETCH_SINGLE_POST_FAILED, \r\n    isEndpointCall: true, \r\n    endpoint: `posts/${id}`, \r\n    reduxData: {id},\r\n    method: 'GET'\r\n});\r\n\r\n\r\n\r\nconst fetch_comments = (id) => ({\r\n    type: TYPES.FETCH_COMMENTS, \r\n    successType: TYPES.FETCH_COMMENTS_SUCCESS, \r\n    failedType: TYPES.FETCH_COMMENTS_FAILED, \r\n    isEndpointCall: true, \r\n    endpoint: `posts/${id}/comments`, \r\n    reduxData: {id},\r\n    method: 'GET'\r\n});\r\n\r\nconst add_comment = (id, comment) => ({\r\n    type: TYPES.ADD_COMMENT, \r\n    successType: TYPES.ADD_COMMENT_SUCCESS, \r\n    failedType: TYPES.ADD_COMMENT_FAILED, \r\n    isEndpointCall: true, \r\n    endpoint: `posts/${id}/comments`, \r\n    reduxData: {id, comment},\r\n    method: 'POST'\r\n});\r\n\r\n\r\n// Dispatch and Fetch, Using Thunk\r\nexport const Add_Comment_And_Fetch = (id, comment) => dispatch => {\r\n    \r\n    dispatch( add_comment(id, comment) )\r\n    .then(res => {\r\n        if(res) {\r\n            dispatch( fetch_comments(id) );\r\n        }\r\n    });\r\n}","import PropTypes from 'prop-types';\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nconst Comments = ({data = [], addComment}) => {\r\n\r\n    const [list, setList] = useState([]);\r\n\r\n    const [input, setInput] = useState({\r\n        user: '',\r\n        email: '',\r\n        comment: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Not a good practice, just for api simulation\r\n        if(data && data.length > 0) {\r\n            setList(data);\r\n        }\r\n    }, [data, data.length]);\r\n\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setInput({\r\n            ...input,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const addHandle = e => {\r\n        e.preventDefault();\r\n\r\n        addComment({\r\n            ...input, \r\n            id: Math.ceil(Math.random() * 32767) + 1,\r\n            like: 0,\r\n            dislike: 0\r\n        });\r\n\r\n        setInput({\r\n            user: '',\r\n            email: '',\r\n            comment: ''\r\n        });\r\n    }\r\n\r\n    const voteClick = (id, action) => () => {\r\n\r\n        // Prev like and dislike\r\n        const {like, dislike} = data.find(i => i.id === id);\r\n\r\n        const updated = list.map(i => {\r\n\r\n            if(i.id === id) {\r\n\r\n                let lk = 0;\r\n                let dk = 0;\r\n                \r\n                if(action === 'like') {\r\n                    lk = i.like > like ? like : like + 1;\r\n                    dk = dislike;\r\n                }\r\n                else {\r\n                    dk = i.dislike > dislike ? dislike : dislike + 1;\r\n                    lk = like;\r\n                }\r\n\r\n                return {\r\n                    ...i, \r\n                    like: lk, \r\n                    dislike: dk\r\n                };\r\n            }\r\n\r\n            return i;\r\n        });\r\n\r\n        setList(updated);\r\n    }\r\n\r\n    const {user, email, comment} = input;\r\n\r\n\r\n    return (\r\n        <section className=\"comments\">\r\n            <div className=\"container\">\r\n                <div className=\"head flex-between\">\r\n                    <h4>\r\n                        <i className=\"fa fa-commenting mr-05\" aria-hidden=\"true\"></i>\r\n                        {list.length} comments\r\n                    </h4>\r\n                    <a href=\"#form\" className=\"btn\">Add a comment</a>\r\n                </div>\r\n\r\n                <div className=\"opinions\">\r\n                    {(list instanceof Array) && list.map((i, k) => (\r\n                        <div className='item' key={k}>\r\n                            <div className=\"c-info\">\r\n                                <span>\r\n                                    <i className=\"fa fa-user mr-1\" aria-hidden=\"true\"></i>\r\n                                    <b>{i.user}</b>\r\n                                    <time>{getDate()}</time>\r\n                                </span>\r\n                                <div className='vote'>\r\n                                    <span onClick={voteClick(i.id, 'like')}>\r\n                                        <i className=\"fa fa-thumbs-up like\" aria-hidden=\"true\"></i> {i.like || 0}\r\n                                    </span>\r\n                                    <span onClick={voteClick(i.id, 'dislike')}>\r\n                                        <i className=\"fa fa-thumbs-down dislike\" aria-hidden=\"true\"></i> {i.dislike || 0}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <p>{i.comment}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <form id=\"form\" className=\"form\" onSubmit={addHandle}>\r\n                    <h4 className=\"head\">Leave a comment</h4>\r\n                    <textarea value={comment} onChange={handleChange} name=\"comment\" placeholder='How was this movie?' />\r\n                    <div>\r\n                        <input value={user} onChange={handleChange} type=\"text\" name=\"user\" placeholder='Name' />\r\n                        <input value={email} onChange={handleChange} type=\"email\" name=\"email\" placeholder='Email' />\r\n                        <button className='btn'>Send it</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst getDate = () => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    var yyyy = today.getFullYear();\r\n\r\n    return (yyyy + '-' + mm + '-' + dd);\r\n}\r\n\r\nComments.prototype = {\r\n    data: PropTypes.array,\r\n    addComment: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Comments\r\n","import {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst ROOT = process.env.REACT_APP_ROOT;\r\n\r\n\r\nconst Details = ({post = {}}) => {\r\n\r\n    const {\r\n        id,\r\n        title,\r\n        genre = [],\r\n        actors = [],\r\n        satisfied,\r\n        director,\r\n        year,\r\n        country,\r\n        imdb\r\n    } = post;\r\n\r\n    const lk = 212;\r\n    const dk = 7;\r\n\r\n    const [like, setLike] = useState(lk);\r\n    const [dislike, setDislike] = useState(dk);\r\n    \r\n    const likeClick = () => {\r\n        setLike(like > lk ? lk : like + 1);\r\n        setDislike(dk);\r\n    }\r\n\r\n    const dislikeClick = () => {\r\n        setDislike(dislike > dk ? dk : dislike + 1);\r\n        setLike(lk);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"post-header\">\r\n\r\n            <div className=\"post-cover\"></div>\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"figure col col-auto\">\r\n                        {id && <img src={`${ROOT}/assets/images/thumb${id}.jpg`} alt=\"\" width={207} height={290} />}\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"text\">\r\n                            <h1>{title || '-'}</h1>\r\n                            <div className=\"meta\">\r\n                                <span>{genre ? genre.join(', ') : '-'}</span>\r\n                                <span>{year || '-'}</span>\r\n                                <span>+7</span>\r\n                                <span>{country || ''}</span>\r\n                                <span>2.1 hours</span>\r\n                            </div>\r\n                            <div className=\"cast\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-auto\">\r\n                                        <span className=\"icon yellow\">\r\n                                            <i className=\"fa fa-imdb\" aria-hidden=\"true\"></i>\r\n                                        </span>\r\n                                        {imdb || '-'}/10, 320 votes\r\n                                    </div>\r\n                                    <div className=\"col col-auto\">\r\n                                        <span className=\"icon green\">\r\n                                            <i className=\"fa fa-heart\" aria-hidden=\"true\"></i>\r\n                                        </span>\r\n                                        {satisfied || '-'}% satisfaction\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"actors\">\r\n                                    <span className=\"lbl\">Actors: </span>\r\n                                    {actors ? actors.join(', ') : '-'}\r\n                                </div>\r\n                                <div className=\"director\">\r\n                                    <span className=\"lbl\">Directors: </span>\r\n                                    {director || '-'}\r\n                                </div>\r\n                                <div className=\"votes\">\r\n                                    <span onClick={likeClick}>\r\n                                        <i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i> \r\n                                        {like}\r\n                                    </span>\r\n                                    <span onClick={dislikeClick}>\r\n                                        <i className=\"fa fa-thumbs-down\" aria-hidden=\"true\"></i>\r\n                                        {dislike}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDetails.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        genre: PropTypes.array,\r\n        satisfied: PropTypes.number,\r\n        actors: PropTypes.array,\r\n        director: PropTypes.string,\r\n        desc: PropTypes.string,\r\n        year: PropTypes.string,\r\n        country: PropTypes.string,\r\n        imdb: PropTypes.number\r\n    })\r\n}\r\n\r\nexport default Details\r\n","import React from 'react'\r\n\r\nconst Download = () => {\r\n    return (\r\n        <div className=\"download\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col col-auto\">\r\n                        <span>quality: 1080p, size: 1.86 gb</span>\r\n                        <span>quality: 720p, size: 915 mb</span>\r\n                    </div>\r\n                    <div className=\"col col-auto\">\r\n                        <a href=\"#!\" className=\"btn btn-green\">Download 1080p</a>\r\n                        <a href=\"#!\" className=\"btn btn-green\">Download 720p</a>\r\n                        <a href=\"#!\" className=\"btn btn-yellow\">Watch Online</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Download\r\n","import {Link} from 'react-router-dom';\r\nconst ROOT = process.env.REACT_APP_ROOT;\r\n\r\nconst Similars = () => {\r\n    return (\r\n        <section className='similar'>\r\n            <div className=\"container\">\r\n                <h4 className='head'>Similars</h4>\r\n                <div className=\"row\">\r\n                    {[...Array(6)].map((i, k) => (\r\n                        <div className=\"col col-2\" key={k}>\r\n                            <Link to={ROOT + \"/post/\" + (k + 1)}>\r\n                                <img src={`${ROOT}/assets/images/thumb${k+1}.jpg`} alt=\"\" />\r\n                                <h5>Movies name</h5>\r\n                                <div className=\"vote\">\r\n                                    <i className=\"fa fa-heart mr-05\" aria-hidden=\"true\"></i>\r\n                                    85%\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Similars\r\n","import PropTypes from 'prop-types';\r\nconst ROOT = process.env.REACT_APP_ROOT;\r\n\r\nconst Trailer = ({post = {}}) => {\r\n\r\n    const { id, desc, summary } = post;\r\n\r\n    return (\r\n        <div className=\"trailer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col\">\r\n                        <video \r\n                            src={`${ROOT}/assets/images/goal.mp4`} \r\n                            poster={`${ROOT}/assets/images/thumb${id}.jpg`} \r\n                            width='100%' \r\n                            controls \r\n                            preload='none'\r\n                        ></video>\r\n                    </div>\r\n                    <div className=\"col text\">\r\n                        <h5>Summary</h5>\r\n                        <p>{desc}</p>\r\n                        <h5 className='mt-3'>About</h5>\r\n                        <p>{summary}</p>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTrailer.prototype = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        desc: PropTypes.string,\r\n        summary: PropTypes.string\r\n    }).isRequired\r\n}\r\n\r\nexport default Trailer\r\n","import PropTypes from 'prop-types';\r\nimport {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nimport {\r\n    Fetch_Single_Post, \r\n    Add_Comment_And_Fetch\r\n} from '../../store/actions/post-actions';\r\n\r\nimport Comments from './Comments';\r\nimport Details from './Details';\r\nimport Download from './Download';\r\nimport Similars from './Similars';\r\nimport Trailer from './Trailer';\r\n\r\nconst classList = document.querySelector('body').classList;\r\n\r\n\r\nconst SinglePost = (props) => {\r\n\r\n    const { \r\n        post, \r\n        comments, \r\n        Fetch_Single_Post, \r\n        Add_Comment_And_Fetch \r\n    } = props;\r\n\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n\r\n        Fetch_Single_Post(id);\r\n\r\n        classList.add('page-post');\r\n\r\n        // document.querySelector('body').scrollIntoView({\r\n        //     behavior: 'smooth'\r\n        // }, 200)\r\n\r\n        window.scrollTo(0, 0);\r\n        \r\n        return () => {\r\n            classList.remove('page-post')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [id]);\r\n\r\n\r\n    const addComment = c => {\r\n        Add_Comment_And_Fetch(id, c);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <section className='post-detail'>\r\n            <Details post={post} />\r\n            <Trailer post={post} />\r\n            <Download />\r\n        </section>\r\n\r\n        <Similars />\r\n        <Comments data={comments} addComment={addComment} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post, \r\n    comments: state.comments, \r\n    fetching: state.fetching\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    Fetch_Single_Post,\r\n    Add_Comment_And_Fetch\r\n}\r\n\r\nSinglePost.propTypes = {\r\n    post: PropTypes.object.isRequired, \r\n    comments: PropTypes.array.isRequired, \r\n    Fetch_Single_Post: PropTypes.func.isRequired, \r\n    Add_Comment_And_Fetch: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);\r\n","import {Route, Routes, BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport SinglePost from './components/SinglePost';\n\nimport './Shared/assets/scss/main.scss';\nimport './Shared/assets/scss/slider.scss';\nimport './Shared/assets/css/font-awesome.css';\nimport 'react-loading-skeleton/dist/skeleton.css';\nconst ROOT = process.env.REACT_APP_ROOT;\n\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n\n        <Routes>\n          <Route path={ROOT} element={<Home />} exact />\n          <Route path={ROOT + '/category'} element={<Home />} exact />\n          <Route path={ROOT + '/post/:id'} element={<SinglePost />} />\n        </Routes>\n\n        <Footer />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}